apiVersion: v1
kind: Service
metadata:
  name: kafka-client-msk
  labels:
    app: kafka-client-msk
    component: service
spec:
  ports:
    - name: http
      port: 8080
  selector:
    app: kafka-client-msk
    component: service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-client-msk
  labels:
    app: kafka-client-msk
    component: service
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: kafka-client-msk
      component: service
  template:
    metadata:
      labels:
        app: kafka-client-msk
        component: service
    spec:
      serviceAccountName: {{ .Values.serviceAccountName }}
      containers:
        - image: {{ .Values.image.kafkaClientMSK.image }}
          name: kafka-client-msk
          imagePullPolicy: {{ .Values.image.kafkaClientMSK.pullPolicy }}
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-demo-service-a
  labels:
    app: kafka-demo-service-a
    component: service
spec:
  ports:
    - name: http
      port: 8080
  selector:
    app: kafka-demo-service-a
    component: service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-demo-service-a
  labels:
    app: kafka-demo-service-a
    component: service
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: kafka-demo-service-a
      component: service
  template:
    metadata:
      labels:
        app: kafka-demo-service-a
        component: service
    spec:
      serviceAccountName: {{ .Values.serviceAccountName }}
      containers:
        - image: {{ .Values.image.kafkaDemoService.image }}
          name: kafka-demo-service-a
          ports:
            - containerPort: {{ .Values.image.kafkaDemoService.ports.containerPort }}
          imagePullPolicy: {{ .Values.image.kafkaDemoService.pullPolicy }}
          env:
            - name: LOG_LEVEL
              value: "trace"
            - name: TOPIC1
              value: "foo-topic"
            - name: TOPIC2
              value: "bar-topic"
            - name: GROUP
              value: "consumer-group-A"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-demo-service-b
  labels:
    app: kafka-demo-service-b
    component: service
spec:
  ports:
    - name: http
      port: 8080
  selector:
    app: kafka-demo-service-b
    component: service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-demo-service-b
  labels:
    app: kafka-demo-service-b
    component: service
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: kafka-demo-service-b
      component: service
  template:
    metadata:
      labels:
        app: kafka-demo-service-b
        component: service
    spec:
      serviceAccountName: {{ .Values.serviceAccountName }}
      containers:
        - image: {{ .Values.image.kafkaDemoService.image }}
          name: kafka-demo-service-b
          ports:
            - containerPort: {{ .Values.image.kafkaDemoService.ports.containerPort }}
          imagePullPolicy: {{ .Values.image.kafkaDemoService.pullPolicy }}
          env:
            - name: LOG_LEVEL
              value: "trace"
            - name: TOPIC1
              value: "bar-topic"
            - name: TOPIC2
              value: "foo-topic"
            - name: GROUP
              value: "consumer-group-B"